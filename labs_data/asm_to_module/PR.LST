  Mon Jan  5 2015 23:52                                                                                                  Page    1







               2500 A.D. 8051 Macro Assembler  -  Version 4.02a
               ------------------------------------------------

                       Input  Filename : PR.ASM
                       Output Filename : PR.obj


    4                          	.list on                ; эта директива включает листинг(протокол) процесса ассемблирования
    5                          	
    6                          	;******** именуем константы и внешние выводы 
    7          03E8            	mTik equ 1000          ; длительность импульса в мкс
    8          0002            	mKvoZn equ 2
    9          00B5            	mPin10ms reg P3.5
   10                          	;*****************
   11                          	
   12                          	;***************** это макрос - поименованная группа команд
   13                          		; МАКРОСЫ НЕ ДОЛЖНЫ СОДЕРЖАТЬ РУССКИХ КОММЕНТАРИЕВ!!!!!!!!!!!!!
   14                          	mLoadTimer0 macro mDlitTi
   15                          		Clr TF0
   16                          		Clr TR0
   17                          		Mov TH0, #>(-mDlitTi)
   18                          		Mov TL0, #<(-mDlitTi)
   19                          		SetB TR0
   20                          	.endm
   21                          	;*****************
   22                          	
   23                          	;***************** ; распределяем ячейки ОЗУ
   24   0000                   	.ABSOLUTE
   25   0000                   	.DATA           
   26   0020                   	.ORG 20h
   27   0020                   	mFlags ds 2                     ; 2 байта под битовые переменные
   28          0000            	mFlagsReady REG mFlags.0
   29                          			; Здесь можно определить и другие флажки
   30   0022                   	mCount10ms ds 1                 ; Счетчик для счета времени по 10 мс
   31                          			; Здесь можно определить и другие переменные
   32   0023                   	mEndVar_BeginStack ds 1         ; Первая ячейка стека
   33   0024                   	mKodY ds 1			;Одного байта должно хватить, 0...255
   34   0025                   	mPtrZn ds 1
   35   0026                   	mBuferInd ds  mKvoZn
   36                          	;*****************
   37                          	
   38                          	
   39                          	;************** Векторы прерываний
   40   0028                   	.RELATIVE
   41   0000                   	.CODE
   42   0000                   	.ORG  0
   43   0000   02 00 30        		Jmp mStart
   44   0003                   	.ORG  3    ; внешнее прерывание 0
   45   0003   32              		RetI
   46   000B                   	.ORG  0bh  ; прерывание по таймеру 0
   47   000B   02 00 6F        		Jmp mIntT0
   48   0013                   	.ORG  13h  ; внешнее прерывание 1
   49   0013   32              		RetI
   50   001B                   	.ORG  1bh  ; прерывание по таймеру 1
  Mon Jan  5 2015 23:52                                                                                                  Page    2




   51   001B   32              		RetI
   52   0023                   	.ORG  23h  ; прерывание по последовательному порту
   53   0023   32              		RetI
   54                          	;**************
   55                          	
   56   0024                   	mAccToBCDtoBufInd:
   57                          	;	Mov B, #100				;Определение числа сотен
   58                          	;	Div AB			        
   59                          	;	Mov mBuferInd+2, A	    
   60   0024   75 F0 0A        		Mov B, #10			    ;Вычисляем десятки
   61                          	;    Xch A, B			    ;Остаток от сотен в А
   62   0027   84              	    Div AB			        ;Вычисление и
   63   0028   F5 27           	    Mov mBuferInd+1, A	    ;сохранение десятков
   64   002A   85 F0 26        	    Mov mBuferInd, B		;Остаток - единицы
   65   002D   22              	 Ret
   66                          	
   67                          	
   68                          	
   69                          	;************** ­ Начало программы
   70   0030                   	.ORG  30h
   71   0030                   	mStart:
   72   0030   75 81 22        		Mov SP, #(mEndVar_BeginStack-1)  ; ­ начальный указатель стека
   73   0033   75 22 00        		Mov mCount10ms, #0      ; обнулить счетчик
   74   0036   75 89 11        		Mov TMod, #00010001b    ; таймер 0 на 16 бит 
   75   0039                   		mLoadTimer0 mTik
   76   0039   C2 8D           		Clr TF0
   77   003B   C2 8C           		Clr TR0
   78   003D   75 8C FC        		Mov TH0, #>(-mTik)
   79   0040   75 8A 18        		Mov TL0, #<(-mTik)
   80   0043   D2 8C           		SetB TR0
   81   0045                   	.endm
   82   0045   D2 A9           		SetB ET0                ; разрешить прерывание от таймера 0
   83   0047   D2 AF           		SetB EA                 ; разрешить работу контроллера прерываний
   84   0049   75 90 00        		Mov P1, #0
   85                          	
   86                          	;************** Основной цикл программы
   87   004C                   	mMainLoop:
   88                          	; В основном цикле программы можно организовать счет времени
   89                          	; при помощи переменной Count10ms и управление внешними объектами,
   90                          	; ­ например,через 1 секунду мигать индикаторами или сдвигать порт Р1
   91   004C   E5 22           		Mov A, mCount10ms               ; переменная mCount10ms равна 100?
   92   004E   B4 64 FB        		CJNE A, #100, mMainLoop         ;       (т.е прошла 1 секунда?)
   93   0051   05 90           			Inc P1        ; да, инвертируем светодиод и 
   94   0053   75 22 00        			Mov mCount10ms, #0      ;       ­ начинаем счет времени с начала
   95                          				; для "Бегушего огонька" нужно использовать макрос mRunFireP1 (вместо Cpl)
   96                          				; Для инкремента порта - Inc P1
   97   0056   01 4C           		Jmp mMainLoop
   98                          	;**************
   99                          	
  100                          	;***Индикация знакоместа
  101   0058                   	mIndZn:
  102   0058   E5 25           		Mov A, mPtrZn 			;Заносим адрес
  103   005A   24 26           		Add A, #mBuferInd		;	очередной цифры
  104   005C   F8              		Mov R0, A				;		в регистр косвенной адресации
  105   005D   E6              		Mov A, @R0 			 	;Код очередной цифры в A
  106   005E   C4              		Swap A					;Объединение информации
  107   005F   45 25           		Orl A, mPtrZn 		 	;	с номером знакоместа
  Mon Jan  5 2015 23:52                                                                                                  Page    3




  108   0061   C4              		Swap A					;		в старшей тетраде
  109   0062   F5 90           		Mov P1, A				
  110   0064   05 25           		Inc mPtrZn
  111   0066   E5 25           	      Mov A, mPtrZn
  112   0068   B4 02 03        	      CJNE A, #mKvoZn, Bu 	;Все знакоместа обслужены?
  113   006B   75 25 00        	      Mov mPtrZn, #0		;Начнём по новой
  114   006E                   	Bu:
  115                          	
  116   006E   22              	 Ret
  117                          	
  118                          	;************** процедура прерывания по переполнению таймера 0
  119   006F                   	mIntT0:
  120   006F   C0 D0           		Push PSW                ; Сохраняем 
  121   0071   C0 E0           		Push Acc                ;       регисторы.
  122                          	;	Mov A,P1
  123                          	;	Call mAccToBCDtoBufInd
  124                          	;	Call mIndZn
  125   0073                   		mLoadTimer0 mTik                ; Перезагружаем таймер
  126   0073   C2 8D           		Clr TF0
  127   0075   C2 8C           		Clr TR0
  128   0077   75 8C FC        		Mov TH0, #>(-mTik)
  129   007A   75 8A 18        		Mov TL0, #<(-mTik)
  130   007D   D2 8C           		SetB TR0
  131   007F                   	.endm
  132   007F   B2 B5           		Cpl mPin10ms
  133   0081   05 22           		Inc mCount10ms                  ; счет времени
  134   0083   D0 E0           		Pop Acc                 ; Восстанавливаем регистры 
  135   0085   D0 D0           		Pop PSW                 ;       в обратном порядке
  136   0087   32              		RetI
  137                          	;**************
  138                          	
  139                          	
  140   0088                   	END
  141                          	
  142                          	
  143                          	
  144                          	
  145                          	



           Lines Assembled :  145             Assembly Errors :  0


